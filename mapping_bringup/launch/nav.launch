<?xml version="1.0"?>

<launch>
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true">
        <!--remap from="/scan" to="/laser_pointcloud"/-->
        <rosparam file="$(find mapping_bringup)/nav_conf/create_move_base_params.yaml" command="load" />
        <rosparam file="$(find mapping_bringup)/nav_conf/create_costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find mapping_bringup)/nav_conf/create_costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find mapping_bringup)/nav_conf/create_local_costmap_params.yaml" command="load" />
        <rosparam file="$(find mapping_bringup)/nav_conf/create_global_costmap_params.yaml" command="load" />
        <rosparam file="$(find mapping_bringup)/nav_conf/create_base_local_planner_params.yaml" command="load" />
        <rosparam file="$(find mapping_bringup)/nav_conf/create_move_base_params.yaml" command="load" />
    </node>

    <node pkg="rviz" type="rviz" name="rviz"
        args="-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz"/>

    <arg name="map_file" default="$(find mapping_bringup)/maps/barn.yaml" />
    <arg name="map" default="$(arg map_file)" />
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map)"/>

    <node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0 0 0 1.7 0 0 base_link laser 100" />
    <node pkg="tf" type="static_transform_publisher" name="base_to_base_broadcaster" args="0 0 0 0 0 0 base_footprint base_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="odom_to_base_broadcaster" args="0 0 0 0 0 0 scanmatcher_frame_v2 base_footprint 100" />
    <include file="$(find mapping_bringup)/launch/amcl.launch">
        <!--arg name="topic_scan" value="/laser/scan_merged" /-->
    </include>

    <!--Hector Mapping ONLY used for publishing laser-based odom-->
    <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
        <!--required params for publishing only odom (see https://stackoverflow.com/questions/61707977/using-hector-slam-for-localization)-->
        <remap from="map" to="hector_map"/>
        <remap from="scanmatch_odom" to="odom"/>
        <param name="pub_map_odom_transform" value="false"/>
        <param name="pub_odometry" value="true"/>
        <param name="map_frame" value="scanmatcher_frame" />

        <!-- Frame names -->
        <param name="base_frame" value="base_footprint" />
        <param name="odom_frame" value="scanmatcher_frame" />
        
        <!-- Tf use -->
        <param name="use_tf_scan_transformation" value="true"/>
        <param name="use_tf_pose_start_estimate" value="false"/>
        
        <!-- Map size / start point -->
        <param name="map_resolution" value="0.050"/>
        <param name="map_size" value="2048"/>
        <param name="map_start_x" value="0.5"/>
        <param name="map_start_y" value="0.5" />
        <param name="map_multi_res_levels" value="2" />
        
        <!-- Map update parameters -->
        <param name="update_factor_free" value="0.4"/>
        <param name="update_factor_occupied" value="0.9" />    
        <param name="map_update_distance_thresh" value="0.4"/>
        <param name="map_update_angle_thresh" value="0.06" />
        <param name="laser_z_min_value" value = "-1.0" />
        <param name="laser_z_max_value" value = "1.0" />
        
        <!-- Advertising config --> 
        <param name="advertise_map_service" value="true"/>
        
        <param name="scan_subscriber_queue_size" value="5"/>
        <param name="scan_topic" value="scan"/>
        
        <!-- Debug parameters -->
        <!--
          <param name="output_timing" value="false"/>
          <param name="pub_drawings" value="true"/>
          <param name="pub_debug_output" value="true"/>
        -->
        <param name="tf_map_scanmatch_transform_frame_name" value="scanmatcher_frame_v2" />
    </node>

    <!-- EVERYTHING below is for the point cloud converter -->
    <!--include file="$(find point_cloud_converter)/launch/point_cloud_converter.launch"/-->   
 
    <!--node type="laser_scan_assembler" pkg="laser_assembler"
       name="my_assembler"-->
           <!--ALREADY COMMENTED remap from="scan" to="laser_scan"/-->
           <!--ALREADY COMMENTEDparam name="max_scans" type="int" value="400" /-->
       <!--param name="fixed_frame" type="string" value="laser" /-->
    <!--/node-->
    <!--node type ="laser2pc.py" pkg="laser_to_pcl" name="laser2pc"/-->

</launch>
